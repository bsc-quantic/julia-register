name: Register Julia package on private registry
description: Like Registrator but for federated registries
branding:
  icon: 'package'
  color: 'purple'
inputs:
  registry:
    description: URL of the private registry
    required: true
  push:
    description: If true, push to a custom branch in the registry
    required: true
    default: true
  name:
    description: Name of the bot requesting the registration
    required: true
    default: 'github-actions[bot]'
  email:
    description: Email address of the bot requesting the PR registration
    required: true
    default: '41898282+github-actions[bot]@users.noreply.github.com'
  branch:
    description: If `inputs.push=true`, branch where the registering package will be uploaded.
    required: false
outputs:
  name:
    description: Project name
    value: ${{ steps.register-package.outputs.name }}
  uuid:
    description: Project UUID
    value: ${{ steps.register-package.outputs.uuid }}
  version:
    description: Project version
    value: ${{ steps.register-package.outputs.version }}
  hash:
    description: Tree hash of the registering package
    value: ${{ steps.register-package.outputs.hash }}
  branch:
    description: If `inputs.push=true`, branch where the registering package will be uploaded
    value: ${{ steps.register-package.outputs.branch }}
  path:
    description: Path to the local registry.
    value: ${{ steps.register-package.outputs.path }}
runs:
  using: "composite"
  steps:
    - name: Install dependencies
      shell: bash
      run: |
        julia -e '
          using Pkg
          Pkg.add("RegistryTools")
          Pkg.add("HTTP")
        '
    - name: Register package
      id: register-package
      shell: bash
      run: julia ${{ github.action_path }}/register.jl ${{ inputs.name }} ${{ inputs.email }} ${{ inputs.registry }} ${{ inputs.push }}
